package export

// Generated by 'go run gen.go strconv'. Do not edit!

import "strconv"

var sym_strconv = &map[string]interface{}{
	"AppendBool":               strconv.AppendBool,
	"AppendFloat":              strconv.AppendFloat,
	"AppendInt":                strconv.AppendInt,
	"AppendQuote":              strconv.AppendQuote,
	"AppendQuoteRune":          strconv.AppendQuoteRune,
	"AppendQuoteRuneToASCII":   strconv.AppendQuoteRuneToASCII,
	"AppendQuoteRuneToGraphic": strconv.AppendQuoteRuneToGraphic,
	"AppendQuoteToASCII":       strconv.AppendQuoteToASCII,
	"AppendQuoteToGraphic":     strconv.AppendQuoteToGraphic,
	"AppendUint":               strconv.AppendUint,
	"Atoi":                     strconv.Atoi,
	"CanBackquote":             strconv.CanBackquote,
	"ErrRange":                 strconv.ErrRange,
	"ErrSyntax":                strconv.ErrSyntax,
	"FormatBool":               strconv.FormatBool,
	"FormatFloat":              strconv.FormatFloat,
	"FormatInt":                strconv.FormatInt,
	"FormatUint":               strconv.FormatUint,
	"IntSize":                  strconv.IntSize,
	"IsGraphic":                strconv.IsGraphic,
	"IsPrint":                  strconv.IsPrint,
	"Itoa":                     strconv.Itoa,
	"NumError":                 new(strconv.NumError),
	"ParseBool":                strconv.ParseBool,
	"ParseFloat":               strconv.ParseFloat,
	"ParseInt":                 strconv.ParseInt,
	"ParseUint":                strconv.ParseUint,
	"Quote":                    strconv.Quote,
	"QuoteRune":                strconv.QuoteRune,
	"QuoteRuneToASCII":         strconv.QuoteRuneToASCII,
	"QuoteRuneToGraphic":       strconv.QuoteRuneToGraphic,
	"QuoteToASCII":             strconv.QuoteToASCII,
	"QuoteToGraphic":           strconv.QuoteToGraphic,
	"Unquote":                  strconv.Unquote,
	"UnquoteChar":              strconv.UnquoteChar,
}
