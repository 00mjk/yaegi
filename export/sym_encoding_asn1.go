package export

// Generated by 'go run gen.go encoding/asn1'. Do not edit!

import "encoding/asn1"

var sym_asn1 = &map[string]interface{}{
	"BitString":            new(asn1.BitString),
	"ClassApplication":     asn1.ClassApplication,
	"ClassContextSpecific": asn1.ClassContextSpecific,
	"ClassPrivate":         asn1.ClassPrivate,
	"ClassUniversal":       asn1.ClassUniversal,
	"Enumerated":           new(asn1.Enumerated),
	"Flag":                 new(asn1.Flag),
	"Marshal":              asn1.Marshal,
	"MarshalWithParams":    asn1.MarshalWithParams,
	"NullBytes":            asn1.NullBytes,
	"NullRawValue":         asn1.NullRawValue,
	"ObjectIdentifier":     new(asn1.ObjectIdentifier),
	"RawContent":           new(asn1.RawContent),
	"RawValue":             new(asn1.RawValue),
	"StructuralError":      new(asn1.StructuralError),
	"SyntaxError":          new(asn1.SyntaxError),
	"TagBitString":         asn1.TagBitString,
	"TagBoolean":           asn1.TagBoolean,
	"TagEnum":              asn1.TagEnum,
	"TagGeneralString":     asn1.TagGeneralString,
	"TagGeneralizedTime":   asn1.TagGeneralizedTime,
	"TagIA5String":         asn1.TagIA5String,
	"TagInteger":           asn1.TagInteger,
	"TagNull":              asn1.TagNull,
	"TagNumericString":     asn1.TagNumericString,
	"TagOID":               asn1.TagOID,
	"TagOctetString":       asn1.TagOctetString,
	"TagPrintableString":   asn1.TagPrintableString,
	"TagSequence":          asn1.TagSequence,
	"TagSet":               asn1.TagSet,
	"TagT61String":         asn1.TagT61String,
	"TagUTCTime":           asn1.TagUTCTime,
	"TagUTF8String":        asn1.TagUTF8String,
	"Unmarshal":            asn1.Unmarshal,
	"UnmarshalWithParams":  asn1.UnmarshalWithParams,
}
